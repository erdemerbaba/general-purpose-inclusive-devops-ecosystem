version: '3.8'

services:

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      MONGO_INITDB_DATABASE: userdb

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  eureka-server:
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    container_name: eureka-server
    environment:
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=admin

  gateway:
    build:
      context: ./gateway
    ports:
      - "8080:8080"
    container_name: gateway
    environment:
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=admin

  user-service:
    build:
      context: ./user-service
    ports:
      - "8081:8081"
    container_name: user-service
    environment:
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=admin

  product-service:
    build:
      context: ./product-service
    ports:
      - "8082:8082"
    container_name: product-service
    environment:
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=admin

  asset-service:
    build:
      context: ./asset-service
    ports:
      - "8083:8083"
    container_name: asset-service
    environment:
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=admin
  management-app:
    build:
      context: ./management-app
    ports:
      - "3000:80"
    container_name: management-app

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8443:8443"
      - "50000:50000"
    container_name: jenkins
    volumes:
      - jenkins_home:/var/jenkins_home

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./ansible/prometheus.yml:/etc/prometheus/prometheus.yml

volumes:
  jenkins_home:

networks:
  app-network:
    driver: bridge
